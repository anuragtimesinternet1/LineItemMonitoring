name: Scheduled Python Script 15 minutes

on:
  schedule:
    - cron: '*/15 * * * *'  # This runs the job every 15 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from your repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'  # Specify the Python version you need

      # Step 3: Install dependencies using pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure you have a requirements.txt file with all dependencies

      # Step 4: Create GOOGLE_APPLICATION_CREDENTIALS file
      - name: Create GOOGLE_APPLICATION_CREDENTIALS file
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > $HOME/credentials.json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/credentials.json

      # Step 5: Create googleads.yaml from the GOOGLE_APPLICATION_GOOGLEADS secret
      - name: Create googleads.yaml file
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_GOOGLEADS }}" > $HOME/googleads.yaml
        env:
          GOOGLE_APPLICATION_GOOGLEADS: $HOME/googleads.yaml  # Ensure this variable is passed to the script

      # Step 6: Debugging environment variables
      - name: Debug Environment Variables
        run: printenv | grep GOOGLE  # Print all environment variables related to GOOGLE to check if they're set correctly

      # Step 7: Run the Python script
      - name: Run the Python script
        run: python githubmain.py
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/credentials.json
          GOOGLEADS_CONFIG: $HOME/googleads.yaml
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
